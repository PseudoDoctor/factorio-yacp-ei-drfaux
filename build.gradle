import org.apache.tools.ant.filters.ReplaceTokens
// https://wiki.factorio.com/Tutorial:Modding_tutorial
/**
 * version is always numerical, "number.number.number" for "main.major.minor", for example "0.6.4". Each number can range from 0 to 65535.
 * output zip file must be {mod-name}_{version-number} for this mod, it will be "hello-world-drfaux_0.0.1"

 * First, output src to build/{mod-name}_{version-number}
 * Second, modify info.json with version
 * Third, zip build/{mod-name}_{version-number} to build/{mod-name}_{version-number}.zip
 */
 def modName = "yacp-ei-drfaux"
 def modVersion = "0.0.2"
 def modNameVersion = "${modName}_${modVersion}"
 def prepDir = "${buildDir}/prep"
 def zipDst = "${modNameVersion}.zip"
  /**
  * TODO: figure out how to automagically set version
  * Minor version will follow Odd-Even for Development-Release.
  * https://en.wikipedia.org/wiki/Software_versioning#Odd-numbered_versions_for_development_releases
  * 
  * 1.0.0 is first release
  * 1.1.1 is in development
  * 1.2.1 is release for 1.1.1 code
  * 1.1.2 is development
  * 1.2.2 is release for 1.1.2 code
  * Kinda like branching but more confusing.
  * Never upload x.odd.z to factorio portal
  */
tasks.register('prep-files', Copy){
    from 'src'
    into "${prepDir}/${modNameVersion}"
    filter{it.replaceAll('@@VERSION@@', modVersion)}
}
tasks.register('zip-files', Zip){
    archiveFileName = zipDst
    destinationDirectory = buildDir

    from prepDir
    include "${modNameVersion}/**"
}
